.TH "OpcodeTable" 3 "Thu Apr 26 2018" "CS 301 FinalProj" \" -*- nroff -*-
.ad l
.nh
.SH NAME
OpcodeTable
.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBOpcodeTable\fP ()"
.br
.RI "Initializes all the fields for every instruction in Opcode enum\&. "
.ti -1c
.RI "Opcode \fBgetOpcode\fP (string str)"
.br
.ti -1c
.RI "int \fBnumOperands\fP (Opcode o)"
.br
.RI "Given an Opcode, returns number of expected operands\&. "
.ti -1c
.RI "int \fBRSposition\fP (Opcode o)"
.br
.ti -1c
.RI "int \fBRTposition\fP (Opcode o)"
.br
.ti -1c
.RI "int \fBRDposition\fP (Opcode o)"
.br
.ti -1c
.RI "int \fBIMMposition\fP (Opcode o)"
.br
.ti -1c
.RI "bool \fBisIMMLabel\fP (Opcode o)"
.br
.ti -1c
.RI "InstType \fBgetInstType\fP (Opcode o)"
.br
.RI "Given an Opcode, returns instruction type\&. "
.ti -1c
.RI "string \fBgetOpcodeField\fP (Opcode o)"
.br
.ti -1c
.RI "string \fBgetFunctField\fP (Opcode o)"
.br
.ti -1c
.RI "string \fBname\fP (Opcode o)"
.br
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "OpcodeTable::OpcodeTable ()"

.PP
Initializes all the fields for every instruction in Opcode enum\&. myArray[UNDEFINED]\&.name = 'undefined'; myArray[UNDEFINED]\&.numOps = -1; myArray[UNDEFINED]\&.rdPos = -1; myArray[UNDEFINED]\&.rsPos = -1; myArray[UNDEFINED]\&.rtPos = -1; myArray[UNDEFINED]\&.immPos = -1; myArray[UNDEFINED]\&.op_field = ''; myArray[UNDEFINED]\&.funct_field = ''; 
.SH "Member Function Documentation"
.PP 
.SS "string OpcodeTable::getFunctField (Opcode o)"
Given an Opcode, returns a string representing the binary encoding of the function field\&. 
.SS "Opcode OpcodeTable::getOpcode (string str)"
Given a valid MIPS assembly mnemonic, returns an Opcode which represents a template for that instruction\&. 
.SS "string OpcodeTable::getOpcodeField (Opcode o)"
Given an Opcode, returns a string representing the binary encoding of the opcode field\&. 
.SS "int OpcodeTable::IMMposition (Opcode o)"
Given an Opcode, returns the position of IMM field\&. If field is not appropriate for this Opcode, returns -1\&. 
.SS "bool OpcodeTable::isIMMLabel (Opcode o)"
Given an Opcode, returns true if instruction expects a label in the instruction\&. See 'J'\&. 
.SS "int OpcodeTable::RDposition (Opcode o)"
Given an Opcode, returns the position of RD field\&. If field is not appropriate for this Opcode, returns -1\&. 
.SS "int OpcodeTable::RSposition (Opcode o)"
Given an Opcode, returns the position of RS/RT/RD/IMM field\&. If field is not appropriate for this Opcode, returns -1\&.
.PP
Given an Opcode, returns the position of RS field\&. If field is not appropriate for this Opcode, returns -1\&. 
.SS "int OpcodeTable::RTposition (Opcode o)"
Given an Opcode, returns the position of RT field\&. If field is not appropriate for this Opcode, returns -1\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for CS 301 FinalProj from the source code\&.
